module Daml.Trading.Reward.TradingPoint where 

import Daml.Trading.Account.Account qualified as Account

calPointAndAmountRemain : Decimal -> (Int, Decimal)
calPointAndAmountRemain tradeAmount = (point, tradePointRemain)
  where
    pointRate = Account.configPointsRate
    point = truncate (tradeAmount / pointRate) 
    tradePointRemain = tradeAmount - (pointRate * intToDecimal(point))


template TradeSuccess
  with
    admin : Party
    seller : Party
    buyer : Party
    tradeAmount : Decimal
    asset : Text
  where 
    signatory admin
    observer seller, buyer
    ensure seller /= buyer
    choice IssueRewardPoint : (ContractId Account.Account, ContractId Account.Account)
      controller admin
      do  
        (sellerTradingPointCid, lastSellerTradingPoint) <- fetchByKey @Account.Account (admin, seller)
        (buyerTradingPointCid, lastBuyerTradingPoint) <- fetchByKey @Account.Account (admin, buyer)
        let       
          (currentPoint, currentTradeAmountRemain) = calPointAndAmountRemain tradeAmount
          
          newSellerTradeAmountRemain = currentTradeAmountRemain + lastSellerTradingPoint.tradeAmountRemain
          newBuyerTradeAmountRemain = currentTradeAmountRemain + lastBuyerTradingPoint.tradeAmountRemain

          (sellerPoint, tradeAmountRemainSeller) = calPointAndAmountRemain newSellerTradeAmountRemain
          (buyerPoint, tradeAmountRemainBuyer) = calPointAndAmountRemain newBuyerTradeAmountRemain
          
          finalSellerPoint = lastSellerTradingPoint.rewardPoints + currentPoint + sellerPoint
          finalBuyerPointt = lastBuyerTradingPoint.rewardPoints + currentPoint + buyerPoint
        
        updateSeller <- exercise sellerTradingPointCid Account.UpdateRewardPoints with
          inputRewardPoints = finalSellerPoint
          inputTradeAmountRemain = tradeAmountRemainSeller
          ..
          
        updateBuyer <- exercise buyerTradingPointCid Account.UpdateRewardPoints with
          inputRewardPoints = finalBuyerPointt
          inputTradeAmountRemain = tradeAmountRemainBuyer
          ..

        pure(updateSeller,updateBuyer)


