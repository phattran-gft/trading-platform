module Daml.Trading.Reward.TradingPoint where 

import Daml.Trading.Account.Account qualified as Account

calPointAndAmountRemain : Decimal -> (Int, Decimal)
calPointAndAmountRemain tradeAmount = (point, tradePointRemain)
  where
    pointRate = Account.config_points_rate
    point = truncate (tradeAmount / pointRate) 
    tradePointRemain = tradeAmount - (pointRate * intToDecimal(point))


template TradeSuccess
  with
    admin : Party
    seller : Party
    buyer : Party
    tradeAmount : Decimal
    asset : Text
  where 
    signatory admin
    observer seller, buyer
    ensure seller /= buyer
    choice IssueRewardPoint : (ContractId Account.Account, ContractId Account.Account)
      controller admin
      do  
        (sellerTradingPointCid, sellerTradingPoint) <- fetchByKey @Account.Account (admin, seller)
        (buyerTradingPointCid, buyerTradingPoint) <- fetchByKey @Account.Account (admin, buyer)
        let       
          oldSellerTradingPoint = sellerTradingPoint.rewardPoints
          oldBuyerTradingPoint = buyerTradingPoint.rewardPoints
          oldSellerTradeAmountRemain = sellerTradingPoint.tradeAmountRemain
          oldBuyerTradeAmountRemain = buyerTradingPoint.tradeAmountRemain
          (quantityPointBaseTradeAmount, tradeAmountRemainBaseTradeAmount) = calPointAndAmountRemain tradeAmount
          
          newSellerTradeAmountRemain = tradeAmountRemainBaseTradeAmount + oldSellerTradeAmountRemain
          newBuyerTradeAmountRemain = tradeAmountRemainBaseTradeAmount + oldBuyerTradeAmountRemain

          (sellerPoint, tradeAmountRemainSeller) = calPointAndAmountRemain newSellerTradeAmountRemain
          (buyerPoint, tradeAmountRemainBuyer) = calPointAndAmountRemain newBuyerTradeAmountRemain
          sellerQuantityPointAfterCalAmountRemain = oldSellerTradingPoint + quantityPointBaseTradeAmount + sellerPoint
          buyerQuantityPointAfterCalAmountRemain = oldBuyerTradingPoint + quantityPointBaseTradeAmount + buyerPoint

          sellerRewardPoint = sellerQuantityPointAfterCalAmountRemain
          buyerRewardPoint = buyerQuantityPointAfterCalAmountRemain
          sellerAmountRemain = tradeAmountRemainSeller
          buyerAmountRemain = tradeAmountRemainBuyer
        
        updateSeller <- exercise sellerTradingPointCid Account.UpdateRewardPoints with
          input_rewardPoints = sellerRewardPoint
          input_tradeAmountRemain = sellerAmountRemain
          ..
          
        updateBuyer <- exercise buyerTradingPointCid Account.UpdateRewardPoints with
          input_rewardPoints = buyerRewardPoint
          input_tradeAmountRemain = buyerAmountRemain
          ..

        pure(updateSeller,updateBuyer)


