module Daml.Trading.Tests.BadgeTest where

import Daml.Trading.Reward.Badge qualified as Badge
import Daml.Trading.Account.Account qualified as CreateAccount
import Daml.Trading.Scripts.UserSetup qualified as UserSetup (createUsers)
import Daml.Trading.Scripts.HoldingSetup qualified as HoldingSetup (initialize) 
import Daml.Script

setup : Script()

setup = do 
  (public, admin, cashInstrument, accountFactoryCid, 
    cashHoldingFactoryCid, nftHoldingFactoryCid, instrumentFactoryCid, adminHoldingCid) <- HoldingSetup.initialize 
  [alice, bob] <- UserSetup.createUsers public ["Alice", "Bob"]

  aliceAccountCid <- submit alice do
    createCmd CreateAccount.Account
      with
        custodian = alice
        owner = alice
        accountType = CreateAccount.Retail 
        username = "alice" 
        realName = "Alice" 
        passportNumber = "" 
        nationalId = "333333" 
        address  = "Boston" 
        optCashAccount = None 
        optNftAccount = None 
        rewardPoints = 1600
        badges = []

  aliceRedeem1 <- submit alice do
    exerciseCmd aliceAccountCid CreateAccount.Redeem_Badge with 
      redeem_badge = Badge.Novice_Trader 

  bobCreateAccountCid <- submit bob do
    createCmd CreateAccount.Account
      with
        custodian = bob
        owner = bob
        accountType = CreateAccount.Retail 
        username = "bob" 
        realName = "Bob" 
        passportNumber = "" 
        nationalId = "111111" 
        address  = "Boston" 
        optCashAccount = None 
        optNftAccount = None 
        rewardPoints = 120
        badges = []

  bobRedeem1 <- submit bob do
    exerciseCmd bobCreateAccountCid CreateAccount.Redeem_Badge with 
      redeem_badge = Badge.Novice_Trader 

  aliceRedeem2 <- submit alice do
    exerciseCmd aliceRedeem1 CreateAccount.Redeem_Badge with 
      redeem_badge = Badge.Pro_Trader

  submit alice do
    exerciseCmd aliceRedeem2 CreateAccount.Redeem_Badge with 
      redeem_badge = Badge.Hall_of_Fame_Trader
  pure()
