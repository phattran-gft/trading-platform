module Daml.Trading.Nft.Token where

import Daml.Finance.Interface.Holding.Account qualified as Account (Credit(..), I, exerciseInterfaceByKey)
import Daml.Finance.Interface.Holding.Base qualified as Holding (I)
import Daml.Finance.Interface.Instrument.Base.Instrument qualified as Instrument (K, qty)
import Daml.Finance.Interface.Types.Common (AccountKey(..), Id(..))
import Daml.Trading.Account.Account (nftLabel)

data PictureType
    = Portrait
    | Landscape
        deriving (Eq, Show)

data Rarity 
    = Common
    | Rare
    | Super_Rare
        deriving (Eq, Show)

template Request
  with
    owner: Party 
    custodian: Party 
    userAdmin: Party 
    instrument : Instrument.K
    pictureName : Text
    issued: Time 
    lastPrice: Decimal 
    royaltyRate: Decimal 
    pictureType: PictureType
    rarity: Rarity
    pictureDescription: Text
  where
    signatory owner
    observer custodian


    choice Accept : ContractId Holding.I
      controller custodian 
      do
        let 
          accountKey = AccountKey with custodian, owner, id = Id nftLabel
          amount = 1.0
        Account.exerciseInterfaceByKey @Account.I accountKey custodian Account.Credit
          with
            quantity = Instrument.qty amount instrument

    choice Decline : ()
      controller custodian
      do pure ()

    choice Withdraw : ()
      controller owner
      do pure ()

